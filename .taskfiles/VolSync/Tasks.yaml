---
version: "3"

x-task-vars: &task-vars
  rsrc: '{{.rsrc}}'
  namespace: '{{.namespace}}'
  claim: '{{.claim}}'
  ts: '{{.ts}}'

vars:
  replication_destination_template: "{{.ROOT_DIR}}/.taskfiles/VolSync/templates/ReplicationDestination.tmpl.yaml"
  listJobTemplate: "{{.ROOT_DIR}}/.taskfiles/VolSync/templates/ListJob.tmpl.yaml"
  waitForJobScript: "{{.ROOT_DIR}}/.taskfiles/VolSync/templates/wait-for-job.sh"
  ts: '{{now | date "150405"}}'

tasks:
  list:
    desc: List all snapshots taken by restic for a given ReplicationSource (ex. task vs:list rsrc=plex [namespace=default])
    silent: true
    cmds:
      - envsubst < <(cat "{{.listJobTemplate}}") | kubectl apply -f -
      - bash "{{.waitForJobScript}}" list-{{.rsrc}}-{{.ts}} {{.namespace}}
      - kubectl -n {{.namespace}} wait job/list-{{.rsrc}}-{{.ts}} --for condition=complete --timeout=1m
      - kubectl -n {{.namespace}} logs job/list-{{.rsrc}}-{{.ts}} --container list
      - kubectl -n {{.namespace}} delete job list-{{.rsrc}}-{{.ts}}
    vars:
      rsrc: '{{ or .rsrc (fail "ReplicationSource `rsrc` is required") }}'
      namespace: '{{.namespace | default "default"}}'
    env: *task-vars
    preconditions:
      - sh: test -f "{{.waitForJobScript}}"
      - sh: test -f "{{.listJobTemplate}}"

  restore:
    desc: Restore a VolSync volume
    cmds:
      - envsubst < <(cat "{{.replication_destination_template}}") | kubectl apply -f -
    env: *task-vars
    vars:
      rsrc: '{{ or .rsrc (fail "Replication Source is required") }}'
      claim: '{{ or .claim (fail "Target PVC name is required") }}'
      namespace: '{{ or .namespace (fail "Namespace is required") }}'
