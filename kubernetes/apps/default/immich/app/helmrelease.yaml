# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
  namespace: immich
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 1h
  driftDetection:
    mode: enabled
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: {type: RuntimeDefault}

    controllers:
      server:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom:
              - secretRef:
                  name: immich-secret
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.2.1
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: immich-secret
            env: &env
              TZ: America/Chicago
              IMMICH_WORKERS_INCLUDE: api
              # REDIS_HOSTNAME: valkey-primary
              # REDIS_PASSWORD:
              #   secretKeyRef:
              #     name: valkey
              #     key: valkey-password
              MPLCONFIGDIR: /tmp/matplotlib
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: [ALL]}
        pod:
          terminationGracePeriodSeconds: 1
      microservices:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.2.1
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: immich-secret
            env:
              <<: *env
              IMMICH_WORKERS_INCLUDE: null
              IMMICH_WORKERS_EXCLUDE: api
            resources:
              requests:
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
            securityContext: *securityContext
        pod:
          terminationGracePeriodSeconds: 1
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.135.3
              pullPolicy: IfNotPresent
            securityContext: *securityContext

    persistence:
      # upload:
      #   enabled: true
      #   storageClass: nfs-client
      #   accessMode: ReadWriteMany
      #   size: 32Gi
      #   retain: true
      #   advancedMounts:
      #     server:
      #       app:
      #         - path: /usr/src/app/upload
      #     microservices:
      #       app:
      #         - path: /usr/src/app/upload
      model-cache:
        enabled: true
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        size: 8Gi
        retain: true
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
      tmp:
        enabled: true
        type: emptyDir

    service:
      immich:
        controller: immich
        enabled: false
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        enabled: true
        controller: server
        ports:
          http:
            port: &port 2283

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.markmckessock.com"
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
