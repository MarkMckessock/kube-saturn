---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: frigate
  namespace: frigate
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    image:
      repository: docker.io/blakeblackshear/frigate
      tag: 0.11.1

    env:
      TZ: America/New_York

    envFrom:
      - secretRef:
          name: frigate-secrets

    service:
      main:
        ports:
          http:
            port: &port 5000
          rtmp:
            enabled: true
            port: 1935
            protocol: TCP
            targetPort: 1935

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          failureThreshold: 30
          periodSeconds: 10

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - host: &host "{{ .Release.Name }}.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate-config"
      secret.reloader.stakater.com/reload: "frigate-secrets"

    securityContext:
      privileged: true

    persistence:
      config-file:
        enabled: true
        type: configMap
        name: frigate-config
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: true
      recordings:
        enabled: true
        type: nfs
        path: /volume1/Media/recordings/recordings
        server: ${NFS_SERVER}
        mountPath: /media/frigate/recordings
      clips:
        enabled: true
        type: nfs
        path: /volume1/Media/recordings/clips
        server: ${NFS_SERVER}
        mountPath: /media/frigate/clips
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        mountPath: /dev/shm
      usb:
        enabled: false
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        mountPath: /dev/bus/usb
    # nodeSelector:
    #   node-role.kubernetes.io/worker: "true"
    #   google.feature.node.kubernetes.io/coral: "true"
    #   intel.feature.node.kubernetes.io/gpu: "true"
    # affinity:
    #   podAntiAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       - labelSelector:
    #           matchExpressions:
    #             - key: app.kubernetes.io/name
    #               operator: In
    #               values: ["plex"]
    #         topologyKey: kubernetes.io/hostname
    resources:
      requests:
        cpu: 10m
        memory: 1000Mi
        # gpu.intel.com/i915: "1"
      limits:
        memory: 6000Mi
        # gpu.intel.com/i915: "1"
