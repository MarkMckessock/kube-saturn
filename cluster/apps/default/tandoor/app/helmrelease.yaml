---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: tandoor
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    configMaps:
      config:
        data:
          nginx-config: |-
            events {
              worker_connections 1024;
            }
            http {
              include mime.types;
              server {
                listen 80;
                server_name _;

                client_max_body_size 16M;

                # serve static files
                location /static/ {
                  alias /static/;
                }
                # serve media files
                location /media/ {
                  alias /media/;
                }
              }
            }
    serviceAccount:
      create: true
      name: tandoor
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: vabene1111/recipes
              tag: 1.5.19
            env:
              - name: DB_ENGINE
                value: django.db.backends.postgresql
              - name: POSTGRES_PORT
                value: "5432"
              - name: DEBUG
                value: "0"
              - name: ALLOWED_HOSTS
                value: "*"
              - name: GUNICORN_MEDIA
                value: "0"
            envFrom:
              - secretRef:
                  name: tandoor-secret
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  failureThreshold: 3
                  periodSeconds: 30
                  httpGet:
                    path: /
                    port: 8080
                    scheme: HTTP
              readiness:
                enabled: true
                custom: true
                spec:
                  periodSeconds: 30
                  httpGet:
                    path: /
                    port: 8080
                    scheme: HTTP
            resources:
              requests:
                cpu: 250m
                memory: 64Mi
            command:
            - /opt/recipes/venv/bin/gunicorn
            - -b
            - :8080
            - --access-logfile
            - "-"
            - --error-logfile
            - "-"
            - --log-level
            - INFO
            - recipes.wsgi
            securityContext:
              runAsUser: 65534
          nginx:
            image:
              repository: nginx
              tag: latest
            resources:
              requests:
                cpu: 250m
                memory: 64Mi
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-initdb
              tag: "14.8"
            env:
              POSTGRES_DB:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_DB
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_USER
              POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_PASSWORD
              POSTGRES_SUPER_USER:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_SUPER_USER
              POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_SUPER_PASS
              POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_HOST
          init-chmod-data:
            image:
              repository: vabene1111/recipes
              tag: 1.5.19
            securityContext:
              runAsUser: 0
            resources:
              requests:
                cpu: 250m
                memory: 64Mi
            env:
              - name: DB_ENGINE
                value: django.db.backends.postgresql
              - name: POSTGRES_PORT
                value: "5432"
            envFrom:
              - secretRef:
                  name: tandoor-secret
            command:
            - sh
            - -c
            - |
              set -e
              source venv/bin/activate
              echo "Updating database"
              python manage.py migrate
              python manage.py collectstatic_js_reverse
              python manage.py collectstatic --noinput
              echo "Setting media file attributes"
              chown -R 65534:65534 /opt/recipes/mediafiles
              find /opt/recipes/mediafiles -type d | xargs -r chmod 755
              find /opt/recipes/mediafiles -type f | xargs -r chmod 644
              echo "Done"
    service:
      main:
        primary: true
        controller: main
        ports:
          http:
            primary: true
            port: &port 80
          gunicorn:
            port:  8080
    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
          nginx.ingress.kubernetes.io/auth-response-headers: "Cf-Access-Authenticated-User-Email"
        hosts:
          - host: &host "{{ .Release.Name }}.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: "{{ .Release.Name }}"
                  port: 8080
              - path: /media
                pathType: Prefix
                service:
                  name: "{{ .Release.Name }}"
                  port: 80
              - path: /static
                pathType: Prefix
                service:
                  name: "{{ .Release.Name }}"
                  port: 80
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      media:
        type: persistentVolumeClaim
        size: 1Gi
        accessMode: ReadWriteOnce
        storageClass: ceph-block
        retain: true
        globalMounts:
          - path: /opt/recipes/mediafiles
            subPath: files
        advancedMounts:
          main:
            nginx:
              - path: /etc/nginx/html/media
                subPath: files
      static:
        type: persistentVolumeClaim
        size: 1Gi
        accessMode: ReadWriteOnce
        storageClass: ceph-block
        retain: true
        globalMounts:
          - path: /opt/recipes/staticfiles
            subPath: files
        advancedMounts:
          main:
            nginx:
              - path: /etc/nginx/html/static
                subPath: files
      nginx-config:
        type: configMap
        name: tandoor-config
        globalMounts:
          - path: /etc/nginx/nginx.conf
            subPath: nginx-config
