---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.32.8.7639-fb6452ebf
            env:
              TZ: "America/Toronto"
              PUID: 1000
              PGID: 1000
              VERSION: docker
              NVIDIA_VISIBLE_DEVICES: "all"
              NVIDIA_DRIVER_CAPABILITIES: "all"
              HARDWARE_DEVICE_PATH: "/dev/nvidia0"
            resources:
              requests:
                nvidia.com/gpu: 1
                cpu: 100m
                memory: 2000Mi
              limits:
                nvidia.com/gpu: 1
                memory: 10000Mi
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${PLEX_IP}
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - host: &host "{{ .Release.Name }}.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    pod:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      runtimeClassName: nvidia
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nvidia.com/gpu.present
                    operator: In
                    values:
                      - "true"
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        size: 400Gi
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /config
        storageClass: ceph-block
        retain: true
      media:
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/Media
        globalMounts:
          - path: /data
            readOnly: true
      transcode:
        type: emptyDir
        globalMounts:
          - path: /transcode
