---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: binhex/arch-qbittorrentvpn
              tag: 4.6.7-1-01
            env:
              TZ: "America/Toronto"
              PUID: 1000
              PGID: 1000
              ENABLE_PRIVOXY: "no"
              DEBUG: "true"
              VPN_ENABLED: "yes"
              LAN_NETWORK: 10.0.0.0/16,192.168.2.0/24
              WEBUI_PORT: 8080
              STRICT_PORT_FORWARD: "yes"
              QBITTORRENT__BT_PORT: &port-bt 50413
              NAME_SERVERS: 1.1.1.1,1.0.0.1,8.8.8.8
              VPN_CLIENT: wireguard
              VPN_PROV: pia
            securityContext:
              privileged: true
              capabilities:
                add: ["NET_ADMIN"]
            envFrom:
              - secretRef:
                  name: pia-vpn-credentials
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 6000Mi
    service:
      main:
        ports:
          http:
            port: 8080
      bittorrent:
        controller: main
        type: LoadBalancer
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
        externalTrafficPolicy: Local
    ingress:
      main:
        ingressClassName: nginx
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - host: &host "{{ .Release.Name }}.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        size: 1Gi
        accessMode: ReadWriteOnce
        storageClass: ceph-block
        globalMounts:
          - path: /config
        retain: true
      downloads:
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/Downloads
        globalMounts:
          - path: /complete
      media:
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/Media
        globalMounts:
          - path: /media
