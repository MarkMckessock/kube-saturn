apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: binhex/arch-qbittorrentvpn
      tag: 4.5.0-1-01

    env:
      TZ: "America/Toronto"
      PUID: 1000
      PGID: 1000
      ENABLE_PRIVOXY: "no"
      DEBUG: "true"
      VPN_ENABLED: "yes"
      LAN_NETWORK: 10.0.0.0/16,192.168.2.0/24
      WEBUI_PORT: 8080
      STRICT_PORT_FORWARD: yes
      QBITTORRENT__BT_PORT: &port-bt 50413
    envFrom:
      - secretRef:
          name: pia-vpn-credentials

    service:
      main:
        ports:
          http:
            port: 8080

      bittorrent:
        enabled: true
        type: LoadBalancer
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
        externalTrafficPolicy: Local

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - host: &host "{{ .Release.Name }}.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    securityContext:
      capabilities:
        add: ["NET_ADMIN"]
    persistence:
      config:
        enabled: true
        type: pvc
        size: 1Gi
        accessMode: ReadWriteOnce
        storageClass: longhorn
        mountPath: /config
        retain: true
      downloads:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/Downloads
        mountPath: /complete
      media:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/Media
        mountPath: /media
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 6000Mi
