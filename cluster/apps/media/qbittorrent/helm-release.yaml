apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: qbittorrent
      version: 13.5.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: binhex/arch-qbittorrentvpn
      tag: 4.5.0-1-01
    env:
      TZ: "America/Toronto"
      PUID: 1000
      PGID: 1000
      ENABLE_PRIVOXY: "no"
      DEBUG: "true"
      VPN_ENABLED: "yes"
      LAN_NETWORK: 10.0.0.0/16,192.168.2.0/24
      WEBUI_PORT: 8080
      STRICT_PORT_FORWARD: yes
      NAME_SERVERS: 209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
    nodeSelector:
      kubernetes.io/arch: amd64
    envFrom:
      - secretRef:
          name: qbittorrent-vpn
    service:
      main:
        ports:
          http:
            port: 8080
      bittorrent:
        enabled: true
        type: LoadBalancer
        ports:
          bittorrent:
            enabled: true
            port: 50413
            protocol: TCP
            targetPort: 50413
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - host: "qbittorrent.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "qbittorrent.${DOMAIN}"
            secretName: qbittorrent-cert
    securityContext:
      capabilities:
        add: ["NET_ADMIN"]
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: nfs.truenas.${DOMAIN}
            path: /mnt/tank/downloads
        mountPath: /complete
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: nfs.truenas.${DOMAIN}
            path: /mnt/tank/media
        mountPath: /media
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 6000Mi
    metrics:
      enabled: false
      prometheusRule:
        enabled: false
      exporter:
        env:
          user: admin
