---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 60.5.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 1m
  timeout: 15m
  maxHistory: 3
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    alertmanager:
      ingress:
        enabled: true
        annotations:
          external-dns.home.arpa/enabled: "true"
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - alertmanager.${DOMAIN}
        tls:
          - secretName: alertmanager-cert
            hosts:
              - alertmanager.${DOMAIN}
      alertmanagerSpec:
        useExistingSecret: true
        configSecret: alertmanager-secret
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 1Gi
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      ingress:
        enabled: true
        annotations:
          external-dns.home.arpa/enabled: "true"
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - grafana.${DOMAIN}
        tls:
          - secretName: grafana-cert
            hosts:
              - grafana.${DOMAIN}
    prometheus:
      ingress:
        enabled: true
        annotations:
          external-dns.home.arpa/enabled: "true"
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - prometheus.${DOMAIN}
        tls:
          - secretName: prometheus-cert
            hosts:
              - prometheus.${DOMAIN}
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      thanosIngress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        hosts:
          - &host thanos-sidecar.${DOMAIN}
        tls:
          - hosts:
              - *host
      prometheusSpec:
        externalUrl: https://prometheus.${DOMAIN}
        thanos:
          image: quay.io/thanos/thanos:v0.38.0
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.29.0"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 14d
        retentionSize: 45GB
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 75Gi
