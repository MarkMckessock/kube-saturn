apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: storage
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2022-12-12T19-27-27Z
    env:
      TZ: America/Toronto
      MINIO_UPDATE: "off"
      MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc:9090
      MINIO_PROMETHEUS_JOB_ID: minio
      MINIO_BROWSER_REDIRECT_URL: https://minio.${DOMAIN}
      MINIO_SERVER_URL: https://s3.${DOMAIN}
    envFrom:
      - secretRef:
          name: minio-secret
    args: ["server", "/data", "--console-address", ":9001"]
    service:
      main:
        enabled: true
        ports:
          http:
            port: &console-port 9001
          api:
            enabled: true
            port: &api-port 9000
    # serviceMonitor:
    #   main:
    #     enabled: true
    #     endpoints:
    #       - port: api
    #         scheme: http
    #         path: /minio/v2/metrics/cluster
    #         interval: 1m
    #         scrapeTimeout: 10s
    #         bearerTokenSecret:
    #           name: minio-secret
    #           key: MINIO_PROMETHEUS_TOKEN
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /minio/health/live
            port: *api-port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        hosts:
          - host: &console-host "{{ .Release.Name }}.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *console-port
        tls:
          - hosts:
              - *console-host
      s3:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
          nginx.ingress.kubernetes.io/proxy-body-size: 1024m
          nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CLUSTER_ISSUER}
        hosts:
          - host: &api-host s3.${DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *api-port
        tls:
          - hosts:
              - *api-host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    persistence:
      config:
        enabled: true
        type: nfs
        path: /volume1/Apps/minio
        server: ${NFS_SERVER}
        mountPath: /data
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi