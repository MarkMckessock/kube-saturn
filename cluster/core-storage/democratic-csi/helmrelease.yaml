apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: democratic-csi
  namespace: democratic-csi
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://democratic-csi.github.io/charts/
      chart: democratic-csi
      version: 0.10.11
      sourceRef:
        kind: HelmRepository
        name: democratic-csi
        namespace: flux-system
      interval: 5m
  values:
    csiDriver:
      # should be globally unique for a given cluster
      name: "org.democratic-csi.iscsi"

    controller:
      driver:
        image: docker.io/democraticcsi/democratic-csi:v1.5.4
        imagePullPolicy: IfNotPresent

    node:
      driver:
        image: docker.io/democraticcsi/democratic-csi:v1.5.4
        imagePullPolicy: IfNotPresent

    storageClasses:
      - name: truenas-iscsi-csi
        defaultClass: false
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        allowVolumeExpansion: true
        parameters:
          # for block-based storage can be ext3, ext4, xfs
          # for nfs should be nfs
          fsType: ext4

          # if true, volumes created from other snapshots will be
          # zfs send/received instead of zfs cloned
          # detachedVolumesFromSnapshots: "false"

          # if true, volumes created from other volumes will be
          # zfs send/received instead of zfs cloned
          # detachedVolumesFromVolumes: "false"

        mountOptions: []
        secrets:
          provisioner-secret:
          controller-publish-secret:
          node-stage-secret:
          #      # any arbitrary iscsiadm entries can be add by creating keys starting with node-db.<entry.name>
          #      # if doing CHAP
          #      node-db.node.session.auth.authmethod: CHAP
          #      node-db.node.session.auth.username: foo
          #      node-db.node.session.auth.password: bar
          #
          #      # if doing mutual CHAP
          #      node-db.node.session.auth.username_in: baz
          #      node-db.node.session.auth.password_in: bar
          node-publish-secret:
          controller-expand-secret:

    # if your cluster supports snapshots you may enable below
    volumeSnapshotClasses: []
    #- name: freenas-iscsi-csi
    #  parameters:
    #  # if true, snapshots will be created with zfs send/receive
    #  # detachedSnapshots: "false"
    #  secrets:
    #    snapshotter-secret:

    driver:
      config:
        driver: freenas-api-iscsi
        instance_id:
        httpConnection:
          protocol: http
          host: 10.0.70.6
          port: 80
          # use only 1 of apiKey or username/password
          # if both are present, apiKey is preferred
          # apiKey is only available starting in TrueNAS-12
          apiKey: 1-9xEwzDmYEyTn18kF7jnCfkGenCrLuTXkiNecIWw9pYcwTmy91P9GsIjPioGNPaVn
          # username: root
          # password:
          allowInsecure: true
        zfs:
          # can be used to set arbitrary values on the dataset/zvol
          # can use handlebars templates with the parameters from the storage class/CO
          # datasetProperties:
          #   "org.freenas:description": "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}"

          # total volume name (zvol/<datasetParentName>/<pvc name>) length cannot exceed 63 chars
          # https://www.ixsystems.com/documentation/freenas/11.2-U5/storage.html#zfs-zvol-config-opts-tab
          # standard volume naming overhead is 46 chars
          # datasetParentName should therefore be 17 chars or less when using TrueNAS 12 or below
          datasetParentName: containers/k8s
          # do NOT make datasetParentName and detachedSnapshotsDatasetParentName overlap
          # they may be siblings, but neither should be nested in the other
          detachedSnapshotsDatasetParentName: containers/snapshots

        iscsi:
          targetPortal: "iscsi.truenas.markmckessock.com:3260"
          # for multipath
          targetPortals: [] # [ "server[:port]", "server[:port]", ... ]
          # leave empty to omit usage of -I with iscsiadm
          interface:

          # MUST ensure uniqueness
          # full iqn limit is 223 bytes, plan accordingly
          # default is "{{ name }}"
          #nameTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}-{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
          namePrefix: csi-
          nameSuffix: "-clustera"
          # add as many as needed
          targetGroups:
            # get the correct ID from the "portal" section in the UI
            - targetGroupPortalGroup: 1
              # get the correct ID from the "initiators" section in the UI
              targetGroupInitiatorGroup: 1
              # None, CHAP, or CHAP Mutual
              targetGroupAuthType: None
              # get the correct ID from the "Authorized Access" section of the UI
              # only required if using Chap
              targetGroupAuthGroup:

          extentInsecureTpc: true
          extentXenCompat: false
          extentDisablePhysicalBlocksize: true
          # 512, 1024, 2048, or 4096,
          extentBlocksize: 512
          # "" (let FreeNAS decide, currently defaults to SSD), Unknown, SSD, 5400, 7200, 10000, 15000
          extentRpm: "SSD"
          # 0-100 (0 == ignore)
          extentAvailThreshold: 0
